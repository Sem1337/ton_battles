name: Backend CI

on:
  workflow_call:
    inputs:
      POSTGRES_USER:
        required: true
        type: string
      POSTGRES_PASSWORD:
        required: true
        type: string
      POSTGRES_DB:
        required: true
        type: string

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ inputs.POSTGRES_DB }}
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm install --prefix backend

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U ${{ inputs.POSTGRES_USER }}; do
          echo waiting for postgres
          sleep 2
        done

    - name: Run migrations
      env:
        DB_USER: ${{ inputs.POSTGRES_USER }}
        DB_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        DB_NAME: ${{ inputs.POSTGRES_DB }}
        DB_HOST: localhost
      run: npm run migrate --prefix backend

    - name: Compile TypeScript
      run: npm run build --prefix backend

    - name: Run tests
      env:
        DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      run: npm test --prefix backend
