name: Backend CI

on:
  workflow_call:
    secrets:
      DB_USERNAME:
        required: true
      DB_PASSWORD:
        required: true
      DB_NAME:
        required: true
      DB_HOST:
        required: true
      GCP_SERVICE_ACCOUNT_KEY:
        required: true
      GCP_PROJECT:
        required: true
      INSTANCE_CONNECTION_NAME:
        required: true
      BOT_TOKEN:
        required: true

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm install --prefix backend

    - name: Replace placeholders with environment variables
      run: |
        sed -i "s|PLACEHOLDER_DB_HOST|${{ secrets.DB_HOST }}|g" app.yaml
        sed -i "s|PLACEHOLDER_DB_USERNAME|${{ secrets.DB_USERNAME }}|g" app.yaml
        sed -i "s|PLACEHOLDER_DB_PASSWORD|${{ secrets.DB_PASSWORD }}|g" app.yaml
        sed -i "s|PLACEHOLDER_DB_NAME|${{ secrets.DB_NAME }}|g" app.yaml
        sed -i "s|PLACEHOLDER_INSTANCE_CONNECTION_NAME|${{ secrets.INSTANCE_CONNECTION_NAME }}|g" app.yaml
        sed -i "s|PLACEHOLDER_BOT_TOKEN|${{ secrets.BOT_TOKEN }}|g" app.yaml

    - name: Authenticate to Google Cloud
      run: |
        echo $GCP_SERVICE_ACCOUNT_KEY | jq '.' > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
        gcloud --quiet config set project ${{ secrets.GCP_PROJECT }}
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Install Cloud SQL Proxy
      run: |
        wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
        chmod +x cloud_sql_proxy

    - name: Start Cloud SQL Proxy
      run: |
        ./cloud_sql_proxy -instances=${{ secrets.INSTANCE_CONNECTION_NAME }}=tcp:5432 &
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: localhost

    - name: Wait for Cloud SQL Proxy to be ready
      run: |
        until nc -z -v -w30 127.0.0.1 5432
        do
          echo "Waiting for Cloud SQL Proxy to be ready..."
          sleep 5
        done

    - name: Run database migrations
      run: |
        npm run migrate --prefix backend
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: localhost
        DB_PORT: 5432

    - name: Build backend
      run: |
        npm run build --prefix backend
  
    - name: Deploy to Google App Engine
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: localhost
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        echo "$GCP_SERVICE_ACCOUNT_KEY" > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
        gcloud --quiet config set project $GCP_PROJECT
        gcloud app deploy app.yaml --quiet

    - name: Run tests
      run: |
        npm test --prefix backend
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
