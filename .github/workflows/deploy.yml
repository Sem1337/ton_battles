name: Deploy to Yandex Cloud

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Yandex CLI
      run: |
        curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -a

    - name: Check environment variables
      run: |
        echo "Checking environment variables:"
        echo "PATH=$PATH"
        ls -la /home/runner/yandex-cloud/
        ls -la /home/runner/yandex-cloud/bin/
        cat /home/runner/yandex-cloud/path.bash.inc
        source '/home/runner/yandex-cloud/path.bash.inc'
        echo "PATH=$PATH"
        echo '/home/runner/yandex-cloud/bin' >> $GITHUB_PATH

    - name: Set up Yandex CLI
      run: |
        echo "PATH=$PATH"
        echo $GITHUB_PATH
        ls -la $HOME/yandex-cloud/bin
        yc config set token ${{ secrets.YC_OAUTH_TOKEN }}
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
        yc config set compute-default-zone ru-central1-d
        yc config list

    - name: Log in to Yandex Container Registry
      run: |
        yc container registry configure-docker


    - name: Verify Cluster
      run: |
        echo "Listing clusters to verify access..."
        yc managed-kubernetes cluster list
  
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: cr.yandex/crp864q0vdo1e470updf/my-app:latest

    - name: Set up kubectl
      run: |
        yc managed-kubernetes cluster get-credentials ton-btl-cluster --external --force
  
    - name: Create Docker Registry Secret
      run: |
        if ! kubectl get secret ycr-secret; then
          kubectl create secret docker-registry ycr-secret \
            --docker-server=cr.yandex \
            --docker-username=oauth \
            --docker-password="${{ secrets.YC_OAUTH_TOKEN }}" \
            --docker-email=semenvlasov2000@gmail.com
        fi

    - name: Apply Kubernetes Secrets and Deployment
      run: |
        kubectl apply -f backend/deployment.yaml
        kubectl apply -f backend/service.yaml

    - name: Wait for Deployment
      run: |
        kubectl rollout status deployment/my-app

    - name: Get External IP
      run: |
        echo "Waiting for LoadBalancer IP..."
        sleep 60  # Wait for a minute to allow the LoadBalancer IP to be assigned
        EXTERNAL_IP=$(kubectl get svc my-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "The external IP is: $EXTERNAL_IP"
